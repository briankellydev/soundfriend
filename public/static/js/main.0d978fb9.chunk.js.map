{"version":3,"sources":["components/Player.tsx","components/SongOption.tsx","components/Settings.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Player","props","fileName","playing","volume","audioRef","createRef","useEffect","current","pause","load","play","ref","loop","src","type","SongOption","option","replace","Settings","handleClose","open","isAdmin","useState","email","updateEmail","password","updatePassword","value","updateValue","loading","updateLoading","auth","useAuth","storage","useStorage","songsRef","useFirebaseApp","firestore","collection","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","className","AppBar","position","Tabs","onChange","event","val","aria-label","Tab","label","TextField","required","target","Button","variant","color","disabled","onClick","signInWithEmailAndPassword","then","signOut","accept","child","files","name","put","add","title","socket","openSocket","Main","updatePlaying","selectedSong","updateSelectedSong","updateSrc","totalUsers","updateTotalUsers","updateVolume","interacted","updateInteracted","settingsOpen","updateSettingsOpen","firebaseApp","songOptions","useFirestoreCollectionData","initialData","userRef","doc","currentUser","uid","userDoc","useFirestoreDocData","data","stop","emit","changeVolume","on","totalUsersNumber","song","Card","CardHeader","subheader","action","IconButton","CardContent","fallback","Paper","elevation","map","getDownloadURL","url","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d978fb9.chunk.js","sourcesContent":["import React, { createRef, useEffect } from 'react';\n\nfunction Player(props: any) {\n    const {fileName, playing, volume} = props;\n    const audioRef: any = createRef();\n    useEffect(() => {\n        audioRef.current.pause();\n        audioRef.current.load();\n    }, [fileName, audioRef]);\n\n    useEffect(() => {\n        if (playing) {\n            audioRef.current.play();\n        } else {\n            audioRef.current.pause();\n        }\n        audioRef.current.volume = volume;\n    }, [playing, audioRef, volume]);\n\n    return (\n        <audio ref={audioRef} loop={true}>\n            <source src={fileName + '.mp3'} type=\"audio/mpeg\"></source>\n        </audio>\n    );\n}\nexport default Player;","import React from 'react';\nimport './SongOption.css';\n\nfunction SongOption(props: any) {\n    const {option} = props;\n    return (\n        <div>{option.replace('.mp3', '')}</div>\n    )\n\n}\nexport default SongOption;","import { AppBar, Button, Dialog, DialogContent, DialogTitle, Tab, Tabs, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { AuthCheck, useAuth, useFirebaseApp, useStorage } from 'reactfire';\nimport './Settings.css';\n\nfunction Settings(props: any) {\n    const {handleClose, open, isAdmin} = props;\n    const [ email, updateEmail ] = useState('');\n    const [ password, updatePassword ] = useState('');\n    const [ value, updateValue ] = useState(0);\n    const [ loading, updateLoading ] = useState(false);\n    const auth = useAuth();\n    const storage = useStorage();\n    const firebaseApp = useFirebaseApp();\n    const songsRef = firebaseApp.firestore().collection('songs');\n\n    function login() {\n        updateLoading(true);\n        auth.signInWithEmailAndPassword(email, password).then(() => {\n            updateLoading(false);\n            handleClose();\n        });\n        \n    }\n\n    function logout() {\n        updateLoading(true);\n        auth.signOut().then(() => {\n            updateLoading(false);\n            handleClose();\n        });\n    }\n\n    function handleChange(event: any, val: number) {\n        updateValue(val);\n    }\n\n    function uploadFile(event: any) {\n        updateLoading(true);\n        storage.ref().child(event.target.files[0].name).put(event.target.files[0]).then(() => {\n            songsRef.add({title: event.target.files[0].name}).then(() => {\n                updateLoading(false);\n                handleClose();\n            });\n        })\n    }\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle id=\"simple-dialog-title\">Settings</DialogTitle>\n            <DialogContent>\n                <div className=\"dialogWrapper\">\n                    <div className=\"field\">\n                        <AppBar position=\"static\">\n                            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                                <Tab label=\"Login\"/>\n                                {isAdmin && (<Tab label=\"Upload\"/>)}\n                            </Tabs>\n                        </AppBar>\n                    </div>\n                    \n                    {value === 0 && (\n                        <>\n                            <div className=\"field\">\n                                <TextField required label=\"E-Mail\" value={email} onChange={(event) => updateEmail(event.target.value)}></TextField>\n                            </div>\n                            <div className=\"field\">\n                                <TextField required label=\"Password\" type=\"password\" value={password} onChange={(event) => updatePassword(event.target.value)}></TextField>\n                            </div>\n                            <div className=\"field\">\n                                <Button variant=\"outlined\" color=\"primary\" disabled={!email || !password || loading} onClick={login}>Login</Button>\n                                <Button variant=\"outlined\" color=\"secondary\" disabled={loading} onClick={logout}>Logout</Button>\n                            </div>\n                        </>\n                    )}\n                    {\n                        value === 1 && isAdmin && (\n                            <input type=\"file\" accept=\".mp3\" onChange={uploadFile} disabled={loading}></input>\n                        )\n                    }\n                </div>\n            \n            </DialogContent>\n        </Dialog>\n    );\n}\nexport default Settings;","import React, { useEffect, useState } from 'react';\nimport { AuthCheck, useAuth, useFirebaseApp, useFirestoreCollectionData, useFirestoreDocData, useStorage } from 'reactfire';\nimport openSocket from \"socket.io-client\";\nimport Player from './Player';\nimport { Button, Card, CardContent, CardHeader, IconButton, Paper } from '@material-ui/core';\nimport SongOption from './SongOption';\nimport './Main.css';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Settings from './Settings';\n\n\nconst prod = false;\nconst ENDPOINT = prod ? window.location.hostname : 'http://localhost:4200';\nconst socket = openSocket(ENDPOINT);\n\nfunction Main(props: any) {\n    const [playing, updatePlaying] = useState(false);\n    const [selectedSong, updateSelectedSong] = useState('');\n    const [src, updateSrc] = useState('');\n    const [totalUsers, updateTotalUsers] = useState(0);\n    const [volume, updateVolume] = useState(0.25);\n    const [interacted, updateInteracted] = useState(false);\n    const [settingsOpen, updateSettingsOpen] = useState(false);\n\n    const firebaseApp = useFirebaseApp();\n    const songsRef = firebaseApp.firestore().collection('songs');\n    const songOptions = useFirestoreCollectionData(songsRef, {\n        initialData: []\n    });\n    const storage = useStorage();\n    const auth = useAuth();\n    const userRef = firebaseApp.firestore().collection('users').doc(auth.currentUser?.uid);\n    const userDoc: any = useFirestoreDocData(userRef).data;\n    const isAdmin = userDoc?.isAdmin;\n\n    useEffect(() => {\n        socket.on('userChange', (totalUsersNumber: number) => {\n        updateTotalUsers(totalUsersNumber);\n        });\n        socket.on('play', (song: string) => {\n        updateSelectedSong(song);\n        updatePlaying(true);\n        });\n        socket.on('stop', () => {\n        updatePlaying(false);\n        });\n        socket.on('volume', (val: number) => {\n        updateVolume(val);\n        });\n    }, []);\n\n    function play() {\n        socket.emit('playSong', selectedSong);\n    }\n\n    function stop() {\n        socket.emit('stopSong');\n    }\n\n    function selectSong(song: string) {\n        if (isAdmin) {\n            stop();\n            updateSelectedSong(song);\n            storage.ref().child(song).getDownloadURL().then((url: string) => {\n                updateSrc(url);\n            });\n        }\n    }\n\n    function emergencyStop() {\n        updatePlaying(false);\n    }\n\n    function changeVolume(val: number) {\n        socket.emit('changeVolume', val);\n    }\n\n    function interact() {\n        updateInteracted(true);\n    }\n\n    function openSettings() {\n        updateSettingsOpen(true);\n    }\n\n    function closeSettings() {\n        updateSettingsOpen(false);\n    }\n\n    return (\n        <div className=\"appWrapper\">\n        {\n          interacted ? (\n            <Card>\n              <CardHeader\n                title=\"DnD Jukebox\"\n                subheader={'Total Users: ' + totalUsers}\n                action={\n                    <IconButton onClick={openSettings}>\n                      <SettingsIcon />\n                    </IconButton>\n                  }\n                >\n              </CardHeader>\n              \n              <CardContent>\n                  <AuthCheck fallback={\n                      <Paper className=\"paper\" elevation={3}>Please log in at the top right</Paper>\n                  }>\n                  </AuthCheck>\n                  {\n                      isAdmin ? (\n                        <div className=\"controls\">\n                        <Paper className=\"paper\" elevation={3}>\n                            <Button variant=\"outlined\" color=\"primary\" onClick={play} disabled={!selectedSong}>Play</Button>\n                            <Button variant=\"outlined\" color=\"secondary\" onClick={stop} disabled={!selectedSong}>Stop</Button>\n                            <Button variant=\"outlined\" color=\"default\" onClick={() => changeVolume(0.1)}>10%</Button>\n                            <Button variant=\"outlined\" color=\"default\" onClick={() => changeVolume(0.25)}>25%</Button>\n                            <Button variant=\"outlined\" color=\"default\" onClick={() => changeVolume(0.5)}>50%</Button>\n                            <Button variant=\"outlined\" color=\"default\" onClick={() => changeVolume(0.75)}>75%</Button>\n                            <Button variant=\"outlined\" color=\"default\" onClick={() => changeVolume(1.0)}>100%</Button>\n                        </Paper>\n                    </div>\n                      ) : (\n                        <div className=\"controls\">\n                            <Paper className=\"paper\" elevation={3}>\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={emergencyStop}>Emergency Stop</Button>\n                            </Paper>\n                        </div>\n                      )\n                  }\n\n                  <Paper className=\"paper\" elevation={3}>\n                    {songOptions.data.map((option: any) => {\n                      return (\n                        <div className={selectedSong === option.title ? 'option active' : 'option'} key={'option' + option.title} onClick={() => selectSong(option.title)}>\n                            <SongOption option={option.title}></SongOption>\n                        </div>\n                      )\n                    })}\n                  </Paper>\n                  <AuthCheck fallback={null}>\n                    <Player playing={playing} fileName={src} volume={volume}></Player>\n                  </AuthCheck>\n              </CardContent>\n            </Card>\n          ) : (\n            <Card>\n              <CardHeader title=\"DnD Jukebox\"></CardHeader>\n              <CardContent>\n                <div className=\"center\">\n                  <Button variant=\"outlined\" color=\"primary\" onClick={interact}>Click me to begin!</Button>\n                </div>\n              </CardContent>\n            </Card>\n            \n          )\n        }\n        <Settings open={settingsOpen} handleClose={closeSettings} isAdmin={isAdmin}></Settings>\n        </div>\n    );\n}\nexport default Main;","import React from 'react';\nimport './App.css';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/storage';\n\nimport { FirebaseAppProvider } from 'reactfire';\nimport Main from './components/Main';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAq3kbp7cnn-spQ4_vBbKczj9UeH_tMZPQ\",\n  authDomain: \"soundfriend-529f7.firebaseapp.com\",\n  projectId: \"soundfriend-529f7\",\n  storageBucket: \"soundfriend-529f7.appspot.com\",\n  messagingSenderId: \"318889120890\",\n  appId: \"1:318889120890:web:077c03ecf7c6f86c7457c3\"\n};\n\n// const SONG_OPTIONS = [\n//   'creepingdanger',\n//   'fabulous',\n//   'fortuna',\n//   'gameshow',\n//   'jazz',\n//   'monty',\n//   'pathetique',\n//   'quietreflection',\n//   'rap',\n//   'serenade',\n//   'serene',\n//   'spooky',\n//   'valkyrie',\n//   'psychedelic',\n//   'avemaria',\n//   'gregorian',\n//   'royal'\n// ].sort();\n\nfunction App() {\n  \n\n  return (\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n      <Main></Main>\n    </FirebaseAppProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}